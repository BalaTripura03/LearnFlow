Task 2 : Password Manager
Problem Statement:
Build a secure password manager that encrypts and stores user passwords. The password
manager should provide features for generating strong passwords, organizing passwords by
category, and retrieving them securely when needed.

import secrets
import string

class PasswordManager:
    def __init__(self):
        self.passwords = {}

    def generate_password(self, length=12):
        alphabet = string.ascii_letters + string.digits + string.punctuation
        return ''.join(secrets.choice(alphabet) for i in range(length))

    def add_password(self, category, account, password=None):
        if not password:
            password = self.generate_password()
        if category not in self.passwords:
            self.passwords[category] = {}
        self.passwords[category][account] = password

    def get_password(self, category, account):
        return self.passwords.get(category, {}).get(account, "Password not found.")

# Example usage
password_manager = PasswordManager()

# Add a password
password_manager.add_password("Email", "example@example.com")

# Retrieve a password
print(password_manager.get_password("Email", "example@example.com"))
